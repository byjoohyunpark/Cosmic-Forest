{"version":3,"sources":["js/env.js"],"names":["AFRAME","Error","enviroGetSettings","document","querySelector","components","logPreset","registerComponent","schema","active","default","preset","seed","type","min","max","skyType","oneOf","skyColor","horizonColor","lighting","shadow","shadowSize","lightPosition","x","y","z","fog","flatShading","playArea","ground","groundYScale","groundTexture","groundColor","groundColor2","dressing","dressingAmount","dressingColor","dressingScale","dressingVariance","dressingUniformScale","dressingOnPlayArea","grid","gridColor","multiple","presets","init","STAGE_SIZE","assets","noise","segments","vertices","i","j","length","asset","v","len","userFog","el","sceneEl","getAttribute","sky","createElement","setAttribute","classList","add","stars","groundMaterial","groundCanvas","groundGeometry","gridCanvas","gridTexture","hemilight","color","intensity","sunlight","data","appendChild","getFogColor","sunHeight","fogColor","THREE","Color","fogRatios","fogColors","Math","c1","c2","a","lerp","multiplyScalar","getHexString","update","oldData","undefined","newData","Object","assign","environment","attrValue","sunPos","Vector3","normalize","skycol","r","g","b","castShadow","shadowCameraLeft","shadowCameraBottom","shadowCameraRight","shadowCameraTop","removeAttribute","mat","shader","topColor","bottomColor","setStars","far","updateGroundGeometry","updateGround","updateDressing","dumpParametersDiff","str","console","log","dec3","floor","params","usingPreset","push","def","coords","split","join","random","parseFloat","sin","toString","substr","updateGeometry","resolution","visibleground","PlaneGeometry","perlin","PerlinNoise","verts","numVerts","frequency","inc","h","pow","xx","yy","pa","abs","computeFaceNormals","computeFlatVertexNormals","computeVertexNormals","verticesNeedUpdate","normalsNeedUpdate","groundResolution","texMeters","texRepeat","width","height","Texture","wrapS","RepeatWrapping","wrapT","repeat","set","groundMaterialProps","map","emissive","emissiveMap","Material","hasOwnProperty","shading","FlatShading","SmoothShading","MeshLambertMaterial","groundctx","getContext","gridctx","drawTexture","fillStyle","fillRect","drawGrid","needsUpdate","mesh","Mesh","setObject3D","getObject3D","material","cast","receive","ctx","size","num","step","ii","l","jj","beginPath","arc","PI","fill","col","col1","col2","im","imdata","numpixels","numSquares","squareSize","clone","addScalar","getImageData","diff","rnd","putImageData","s","tex","texctx","walkers","numwalkers","iterations","it","walker","pos","drawImage","getAssetGeometry","geoset","self","applyNoise","geo","n","maxy","points","Vector2","LatheGeometry","applyMatrix","Matrix4","makeRotationFromEuler","Euler","makeTranslation","shape","Shape","moveTo","lineTo","ExtrudeGeometry","amount","bevelEnabled","Geometry","faces","f","Face3","merge","Object3D","geometry","BoxGeometry","ConeGeometry","CylinderGeometry","ds","dv","distance","onPlayArea","direction","matrix","scale","uniformScale","compose","cos","Quaternion","setFromAxisAngle","bufgeo","BufferGeometry","fromGeometry","vertexColors","VertexColors","createStars","numStars","positions","Float32Array","radius","addAttribute","BufferAttribute","setDrawRange","PointsMaterial","Points","id","registerShader","luminance","is","turbidity","reileigh","mieCoefficient","mieDirectionalG","sunPosition","vertexShader","fragmentShader","grad3","p","perm","prototype","dot","mix","t","fade","X","Y","Z","gi000","gi001","gi010","gi011","gi100","gi101","gi110","gi111","n000","n100","n010","n110","n001","n101","n011","n111","u","w","nx00","nx01","nx10","nx11","nxy0","nxy1","nxyz"],"mappings":"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","file":"env.e626cb16.js","sourceRoot":"..","sourcesContent":["\n\n/* global AFRAME, THREE */\n\nif (typeof AFRAME === 'undefined') {\n    throw new Error('Component attempted to register before AFRAME was available.');\n}\n\n/**\n * enviroGetSettings() - console function for printing out the current environment settings\n */\nfunction enviroGetSettings() {\n    document.querySelector('[environment]').components['environment'].logPreset();\n}\n\nAFRAME.registerComponent('environment', {\n    schema: {\n        active: {\n            default: false\n        },\n        preset: {\n            default: 'forest'\n        },\n        seed: {\n            type: 'int',\n            default: 1,\n            min: 0,\n            max: 1000\n        },\n\n        skyType: {\n            default: 'color',\n            oneOf: ['none', 'color', 'gradient', 'atmosphere']\n        },\n        skyColor: {\n            type: 'color'\n        },\n        horizonColor: {\n            type: 'color'\n        },\n        lighting: {\n            default: 'distant',\n            oneOf: ['none', 'distant', 'point']\n        },\n        shadow: {\n            default: false\n        },\n        shadowSize: {\n            default: 10\n        },\n        lightPosition: {\n            type: 'vec3',\n            default: {\n                x: 0,\n                y: 1,\n                z: -0.2\n            }\n        },\n        fog: {\n            type: 'float',\n            default: 0,\n            min: 0,\n            max: 1\n        },\n\n        flatShading: {\n            default: false\n        },\n        playArea: {\n            type: 'float',\n            default: 1,\n            min: 0.5,\n            max: 10\n        },\n\n        ground: {\n            default: 'hills',\n            oneOf: ['none', 'flat', 'hills', 'canyon', 'spikes', 'noise']\n        },\n        groundYScale: {\n            type: 'float',\n            default: 3,\n            min: 0,\n            max: 50\n        },\n        groundTexture: {\n            default: 'none',\n            oneOf: ['none', 'checkerboard', 'squares', 'walkernoise']\n        },\n        groundColor: {\n            type: 'color',\n            default: '#553e35'\n        },\n        groundColor2: {\n            type: 'color',\n            default: '#694439'\n        },\n\n        dressing: {\n            default: 'mushrooms',\n            oneOf: ['none', 'cubes', 'pyramids', 'cylinders', 'hexagons', 'stones', 'trees', 'mushrooms', 'towers', 'apparatus', 'arches', 'torii']\n        },\n        dressingAmount: {\n            type: 'int',\n            default: 10,\n            min: 0,\n            max: 1000\n        },\n        dressingColor: {\n            type: 'color',\n            default: '#795449'\n        },\n        dressingScale: {\n            type: 'float',\n            default: 5,\n            min: 0,\n            max: 100\n        },\n        dressingVariance: {\n            type: 'vec3',\n            default: {\n                x: 1,\n                y: 1,\n                z: 1\n            }\n        },\n        dressingUniformScale: {\n            default: true\n        },\n        dressingOnPlayArea: {\n            type: 'float',\n            default: 0,\n            min: 0,\n            max: 1\n        },\n\n        grid: {\n            default: 'none',\n            oneOf: ['none', '1x1', '2x2', 'crosses', 'dots', 'xlines', 'ylines']\n        },\n        gridColor: {\n            type: 'color',\n            default: '#ccc'\n        }\n    },\n\n    multiple: false,\n\n    presets: {\n        'none': {},\n        'forest': {\n            active: true,\n            seed: 1,\n            skyType: 'atmosphere',\n            skyColor: '#5200ff',\n            horizonColor: '#ccc',\n            lighting: 'distant',\n            lightPosition: {\n                 x: 0,\n                y: 0.02,\n                z: -0.46\n            },\n            fog: 0.8,\n            flatShading: false,\n            playArea: 1,\n            ground: 'hills',\n            groundYScale: 4,\n            groundTexture: 'walkernoise',\n            groundColor: '#FB61BF',\n            groundColor2: '#00ffff',            \n            dressing: 'trees',\n            dressingAmount: 2222,\n            dressingColor: '#00ffff', //00ffff\n            dressingScale: 1,\n            dressingVariance: {\n                x: 1,\n                y: 22,\n                z: 1\n            },\n            dressingUniformScale: true,\n            dressingOnPlayArea: 0,\n            shadow: true\n        }\n    },\n\n    init: function () {\n        // stage ground diameter (and sky radius)\n        this.STAGE_SIZE = 200;\n\n        // data for dressing meshes\n        this.assets = {\n            'mushrooms': [\n                {\n                    type: 'lathe',\n                    noise: 0.02,\n                    segments: 14,\n                    vertices: [0.000001, 0.006, 0.13, 0.018, 0.341, 0.084, 0.437, 0.144, 0.492, 0.234, 0.484, 0.246, 0.276, 0.232, 0.107, 0.284, 0.046, 0.346, 0.062, 0.852, 0.097, 0.956, 0.166, 0.998]\n                },\n                {\n                    type: 'lathe',\n                    noise: 0.02,\n                    segments: 10,\n                    vertices: [0.000001, 0.562, 0.091, 0.572, 0.172, 0.61, 0.223, 0.666, 0.256, 0.74, 0.258, 0.806, 0.246, 0.824, 0.062, 0.826, 0.065, 0.948, 0.097, 0.998]\n                },\n                {\n                    type: 'lathe',\n                    noise: 0.02,\n                    segments: 10,\n                    vertices: [0.000001, 0.768, 0.099, 0.772, 0.219, 0.802, 0.306, 0.844, 0.352, 0.886, 0.352, 0.908, 0.118, 0.904, 0.107, 0.93, 0.115, 0.966, 0.14, 0.996]\n                }\n      ],\n            'trees': [\n                {\n                    type: 'lathe',\n                    noise: 0.015,\n                    segments: 6,\n                    vertices: [0.000001, 0.826, 0.054, 0.832, 0.105, 0.854, 0.136, 0.9, 0.136, 0.958, 0.118, 0.994]\n                },\n                {\n                    type: 'lathe',\n                    noise: 0.015,\n                    segments: 14,\n                    vertices: [0.000001, 0.01, 0.069, 0.022, 0.13, 0.068, 0.178, 0.18, 0.189, 0.32, 0.191, 0.59, 0.193, 0.75, 0.138, 0.79, 0.018, 0.808, 0.018, 0.996]\n                },\n                {\n                    type: 'lathe',\n                    noise: 0.015,\n                    segments: 14,\n                    vertices: [0.000001, 0.436, 0.126, 0.46, 0.201, 0.57, 0.219, 0.72, 0.154, 0.846, 0.028, 0.884, 0.034, 0.996]\n                }\n      ] ,\n                        'hexagons': [\n                {\n                    type: 'extrude',\n                    vertices: [-0.198, -0.302, 0.197, -0.3, 0.372, 0, 0.199, 0.298, -0.202, 0.298, -0.368, 0]\n                }\n      ]\n        };\n\n        // scale down dressing meshes (coordinates were saved in integers for better compression)\n        for (var i in this.assets) {\n            for (var j = 0; j < this.assets[i].length; j++) {\n                var asset = this.assets[i][j];\n                if (asset.type != 'mesh') continue;\n                for (var v = 0, len = asset.vertices.length; v < len; v++) {\n                    asset.vertices[v] /= 1000.0;\n                }\n            }\n        }\n\n        // save current scene fog\n        this.userFog = this.el.sceneEl.getAttribute('fog');\n\n        // create sky\n        this.sky = document.createElement('a-sky');\n        this.sky.setAttribute('radius', this.STAGE_SIZE);\n        this.sky.setAttribute('theta-length', 110);\n        this.sky.classList.add('environment');\n\n        // stars are created when needed\n        this.stars = null;\n\n        // create ground\n        this.groundMaterial = null;\n        this.ground = document.createElement('a-entity');\n        this.ground.setAttribute('rotation', '-90 0 0');\n        this.ground.classList.add('environmentGround');\n        this.ground.classList.add('environment');\n        this.groundCanvas = null;\n        this.groundTexture = null;\n        this.groundMaterial = null;\n        this.groundGeometry = null;\n\n        this.dressing = document.createElement('a-entity');\n        this.dressing.classList.add('environmentDressing');\n        this.dressing.classList.add('environment');\n\n        this.gridCanvas = null;\n        this.gridTexture = null;\n\n        // create lights (one ambient hemisphere light, and one directional for the sun)\n        this.hemilight = document.createElement('a-entity');\n        this.hemilight.classList.add('environment');\n        this.hemilight.setAttribute('position', '0 50 0');\n        this.hemilight.setAttribute('light', {\n            type: 'hemisphere',\n            color: '#CEE4F0',\n            intensity: 0.4\n        });\n        this.sunlight = document.createElement('a-entity');\n        this.sunlight.classList.add('environment');\n        this.sunlight.setAttribute('position', this.data.lightPosition);\n        this.sunlight.setAttribute('light', {\n            intensity: 0.6\n        });\n\n        // add everything to the scene\n        this.el.appendChild(this.hemilight);\n        this.el.appendChild(this.sunlight);\n        this.el.appendChild(this.ground);\n        this.el.appendChild(this.dressing);\n        this.el.appendChild(this.sky);\n    },\n\n    // returns a fog color from a specific sky type and sun height\n    getFogColor: function (skyType, sunHeight) {\n\n        var fogColor;\n        if (skyType == 'color' || skyType == 'none') {\n            fogColor = new THREE.Color(this.data.skyColor);\n        } else if (skyType == 'gradient') {\n            fogColor = new THREE.Color(this.data.horizonColor);\n        } else if (skyType == 'atmosphere') {\n            var fogRatios = [1, 0.5, 0.22, 0.1, 0.05, 0];\n            var fogColors = ['#C0CDCF', '#81ADC5', '#525e62', '#2a2d2d', '#141616', '#000'];\n\n            if (sunHeight <= 0) return '#000';\n\n            sunHeight = Math.min(1, sunHeight);\n\n            for (var i = 0; i < fogRatios.length; i++) {\n                if (sunHeight > fogRatios[i]) {\n                    var c1 = new THREE.Color(fogColors[i - 1]);\n                    var c2 = new THREE.Color(fogColors[i]);\n                    var a = (sunHeight - fogRatios[i]) / (fogRatios[i - 1] - fogRatios[i]);\n                    c2.lerp(c1, a);\n                    fogColor = c2;\n                    break;\n                }\n            }\n        }\n        // dim down the color\n        fogColor.multiplyScalar(0.9);\n        // mix it a bit with ground color\n        fogColor.lerp(new THREE.Color(this.data.groundColor), 0.3);\n\n        return '#' + fogColor.getHexString();\n    },\n\n    update: function (oldData) {\n        // preset changed\n        if (!oldData || (oldData.preset === undefined || oldData.preset !== this.data.preset)) {\n            var newData = Object.assign({}, this.presets[this.data.preset]);\n            if (!oldData || oldData.preset === undefined) {\n                Object.assign(newData, this.el.components.environment.attrValue);\n            }\n            this.el.setAttribute('environment', newData);\n            if (oldData) {\n                return;\n            } else {\n                oldData = {};\n            }\n        }\n\n        var skyType = this.data.skyType;\n        var sunPos = new THREE.Vector3(this.data.lightPosition.x, this.data.lightPosition.y, this.data.lightPosition.z);\n        sunPos.normalize();\n\n        // update light colors and intensities\n        if (this.sunlight) {\n            this.sunlight.setAttribute('position', this.data.lightPosition);\n            if (skyType != 'atmosphere') {\n                // dim down the sky color for the light\n                var skycol = new THREE.Color(this.data.skyColor);\n                skycol.r = (skycol.r + 1.0) / 2.0;\n                skycol.g = (skycol.g + 1.0) / 2.0;\n                skycol.b = (skycol.b + 1.0) / 2.0;\n                this.hemilight.setAttribute('light', {\n                    'color': '#' + skycol.getHexString()\n                });\n                this.sunlight.setAttribute('light', {\n                    'intensity': 0.6\n                });\n                this.hemilight.setAttribute('light', {\n                    'intensity': 0.6\n                });\n            } else {\n                this.sunlight.setAttribute('light', {\n                    'intensity': 0.1 + sunPos.y * 0.5\n                });\n                this.hemilight.setAttribute('light', {\n                    'intensity': 0.1 + sunPos.y * 0.5\n                });\n            }\n\n            this.sunlight.setAttribute('light', {\n                castShadow: this.data.shadow,\n                shadowCameraLeft: -this.data.shadowSize,\n                shadowCameraBottom: -this.data.shadowSize,\n                shadowCameraRight: this.data.shadowSize,\n                shadowCameraTop: this.data.shadowSize\n            });\n        }\n\n        // update sky colors\n        if (skyType != oldData.skyType ||\n            this.data.skyColor != oldData.skyColor ||\n            this.data.horizonColor != oldData.horizonColor) {\n\n            this.sky.removeAttribute('material');\n\n            var mat = {};\n            mat.shader = {\n                'none': 'flat',\n                'color': 'flat',\n                'gradient': 'gradientshader',\n                'atmosphere': 'skyshader'\n            }[skyType];\n            if (this.stars) {\n                this.stars.setAttribute('visible', skyType == 'atmosphere');\n            }\n            if (skyType == 'color') {\n                mat.color = this.data.skyColor;\n                mat.fog = false;\n            } else if (skyType == 'gradient') {\n                mat.topColor = this.data.skyColor;\n                mat.bottomColor = this.data.horizonColor;\n            }\n            this.sky.setAttribute('material', mat);\n        }\n\n        // set atmosphere sun position and stars\n        if (skyType == 'atmosphere') {\n            this.sky.setAttribute('material', {\n                'sunPosition': sunPos\n            });\n            this.setStars((1 - Math.max(0, (sunPos.y + 0.08) * 8)) * 2000);\n        }\n\n        // set fog color\n        if (this.data.fog > 0) {\n            this.el.sceneEl.setAttribute('fog', {\n                color: this.getFogColor(skyType, sunPos.y),\n                far: (1.01 - this.data.fog) * this.STAGE_SIZE * 2\n            });\n        } else {\n            this.el.sceneEl.removeAttribute('fog');\n        }\n\n        // scene lights\n        this.sunlight.setAttribute('light', {\n            type: this.data.lighting == 'point' ? 'point' : 'directional'\n        });\n        this.sunlight.setAttribute('visible', this.data.lighting !== 'none');\n        this.hemilight.setAttribute('visible', this.data.lighting !== 'none');\n\n        // check if ground geometry needs to be calculated\n        var updateGroundGeometry = !this.groundGeometry ||\n            this.data.seed != oldData.seed ||\n            this.data.ground != oldData.ground ||\n            this.data.playArea != oldData.playArea ||\n            this.data.flatShading != oldData.flatShading;\n\n        // check if any parameter of the ground was changed, and update it\n        if (updateGroundGeometry ||\n            this.data.groundColor != oldData.groundColor ||\n            this.data.groundColor2 != oldData.groundColor2 ||\n            this.data.groundYScale != oldData.groundYScale ||\n            this.data.groundTexture != oldData.groundTexture ||\n            this.data.gridColor != oldData.gridColor ||\n            this.data.grid != oldData.grid\n        ) {\n            this.updateGround(updateGroundGeometry);\n            // set bounce light color to ground color\n            if (this.hemilight) this.hemilight.setAttribute('light', {\n                'groundColor': this.data.groundColor\n            });\n        }\n\n        // update dressing\n        if (this.data.seed != oldData.seed ||\n            this.data.dressingOnPlayArea != oldData.dressingOnPlayArea ||\n            this.data.dressing != oldData.dressing ||\n            this.data.flatShading != oldData.flatShading ||\n            this.data.dressingAmount != oldData.dressingAmount ||\n            this.data.dressingScale != oldData.dressingScale ||\n            this.data.dressingColor != oldData.dressingColor ||\n            this.data.dressingVariance.x != oldData.dressingVariance.x ||\n            this.data.dressingVariance.y != oldData.dressingVariance.y ||\n            this.data.dressingVariance.z != oldData.dressingVariance.z ||\n            this.data.dressingUniformScale != oldData.dressingUniformScale\n        ) {\n            this.updateDressing();\n        }\n\n        this.sky.setAttribute('visible', skyType !== 'none');\n\n        this.el.setAttribute('visible', this.data.active);\n        if (!this.data.active) {\n            if (this.userFog) {\n                this.el.sceneEl.setAttribute('fog', this.userFog);\n            } else {\n                this.el.sceneEl.removeAttribute('fog');\n            }\n        }\n\n        // dump current component settings to console\n        this.dumpParametersDiff();\n    },\n\n    // logs current parameters to console, for saving to a preset\n    logPreset: function () {\n        var str = '{';\n        for (var i in this.schema) {\n            if (i == 'preset') continue;\n            str += i + ': ';\n            var type = this.schema[i].type;\n            if (type == 'vec3') {\n                str += '{ x: ' + this.data[i].x + ', y: ' + this.data[i].y + ', z: ' + this.data[i].z + '}';\n            } else if (type == 'string' || type == 'color') {\n                str += '\"' + this.data[i] + '\"';\n            } else {\n                str += this.data[i];\n            }\n            str += ', ';\n        }\n        str += '}';\n        console.log(str);\n    },\n\n    // dumps current component settings to console.\n    dumpParametersDiff: function () {\n\n        // trim number to 3 decimals\n        function dec3(v) {\n            return Math.floor(v * 1000) / 1000;\n        }\n\n        var params = [];\n        var usingPreset = this.data.preset != 'none' ? this.presets[this.data.preset] : false;\n\n        if (usingPreset) {\n            params.push('preset: ' + this.data.preset);\n        }\n\n        for (var i in this.schema) {\n            if (i == 'preset' || (usingPreset && usingPreset[i] === undefined)) {\n                continue;\n            }\n            var def = usingPreset ? usingPreset[i] : this.schema[i].default;\n            var data = this.data[i];\n            var type = this.schema[i].type;\n            if (type == 'vec3') {\n                var coords = def;\n                if (typeof (def) == 'string') {\n                    def = def.split(' ');\n                    coords = {\n                        x: def[0],\n                        y: def[1],\n                        z: def[2]\n                    };\n                }\n                if (dec3(coords.x) != dec3(data.x) || dec3(coords.y) != dec3(data.y) || dec3(coords.z) != dec3(data.z)) {\n                    params.push(i + ': ' + dec3(data.x) + ' ' + dec3(data.y) + ' ' + dec3(data.z));\n                }\n            } else {\n                if (def != data) {\n                    if (this.schema[i].type == 'number') {\n                        data = dec3(data);\n                    }\n                    params.push(i + ': ' + data);\n                }\n            }\n        }\n        console.log('%c' + params.join('; '), 'color: #f48;font-weight:bold');\n    },\n\n    // Custom Math.random() with seed. Given this.data.seed and x, it always returns the same \"random\" number\n    random: function (x) {\n        return parseFloat('0.' + Math.sin(this.data.seed * 9999 * x).toString().substr(7));\n    },\n\n\n    // updates ground attributes, and geometry if required\n    updateGround: function (updateGeometry) {\n\n        var resolution = 64; // number of divisions of the ground mesh\n\n        if (updateGeometry) {\n            var visibleground = this.data.ground != 'none';\n            this.ground.setAttribute('visible', visibleground);\n            if (!visibleground) {\n                return;\n            }\n\n            if (!this.groundGeometry) {\n                this.groundGeometry = new THREE.PlaneGeometry(this.STAGE_SIZE + 2, this.STAGE_SIZE + 2, resolution - 1, resolution - 1);\n            }\n            var perlin = new PerlinNoise();\n            var verts = this.groundGeometry.vertices;\n            var numVerts = this.groundGeometry.vertices.length;\n            var frequency = 10;\n            var inc = frequency / resolution;\n\n            for (var i = 0, x = 0, y = 0; i < numVerts; i++) {\n                if (this.data.ground == 'flat') {\n                    verts[i].z = 0;\n                    continue;\n                }\n\n                var h;\n                switch (this.data.ground) {\n                    case 'hills':\n                        {\n                            h = Math.max(0, perlin.noise(x, y, 0));\n                            break;\n                        }\n                    case 'canyon':\n                        {\n                            h = 0.2 + perlin.noise(x, y, 0) * 0.8;\n                            h = Math.min(1, Math.pow(h, 2) * 10);\n                            break;\n                        }\n                    case 'spikes':\n                        {\n                            h = this.random(i) < 0.02 ? this.random(i + 1) : 0;\n                            break;\n                        }\n                    case 'noise':\n                        {\n                            h = this.random(i) < 0.35 ? this.random(i + 1) : 0;\n                            break;\n                        }\n                }\n\n                h += this.random(i + 2) * 0.1; // add some randomness\n\n                // flat ground in the center\n                var xx = x * 2 / frequency - 1;\n                var yy = y * 2 / frequency - 1;\n                var pa = this.data.playArea;\n                xx = Math.max(0, Math.min(1, (Math.abs(xx) - (pa - 0.9)) * (1 / pa)));\n                yy = Math.max(0, Math.min(1, (Math.abs(yy) - (pa - 0.9)) * (1 / pa)));\n                h *= xx > yy ? xx : yy;\n                if (h < 0.01) h = 0; // stick to the floor\n\n                // set height\n                verts[i].z = h;\n\n                // calculate next x,y ground coordinates\n                x += inc;\n                if (x >= 10) {\n                    x = 0;\n                    y += inc;\n                }\n            }\n\n            this.groundGeometry.computeFaceNormals();\n            if (this.data.flatShading) {\n                this.groundGeometry.computeFlatVertexNormals();\n            } else {\n                this.groundGeometry.computeVertexNormals();\n            }\n\n            this.groundGeometry.verticesNeedUpdate = true;\n            this.groundGeometry.normalsNeedUpdate = true;\n        }\n\n        // apply Y scale. There's no need to recalculate the geometry for this. Just change scale\n        this.ground.setAttribute('scale', {\n            z: this.data.groundYScale\n        });\n\n        // update ground, playarea and grid textures.\n        var groundResolution = 2048;\n        var texMeters = 20; // ground texture of 20 x 20 meters\n        var texRepeat = this.STAGE_SIZE / texMeters;\n\n        if (!this.groundCanvas || this.groundCanvas.width != groundResolution) {\n            this.gridCanvas = document.createElement('canvas');\n            this.gridCanvas.width = groundResolution;\n            this.gridCanvas.height = groundResolution;\n            this.gridTexture = new THREE.Texture(this.gridCanvas);\n            this.gridTexture.wrapS = THREE.RepeatWrapping;\n            this.gridTexture.wrapT = THREE.RepeatWrapping;\n            this.gridTexture.repeat.set(texRepeat, texRepeat);\n\n            this.groundCanvas = document.createElement('canvas');\n            this.groundCanvas.width = groundResolution;\n            this.groundCanvas.height = groundResolution;\n            this.groundTexture = new THREE.Texture(this.groundCanvas);\n            this.groundTexture.wrapS = THREE.RepeatWrapping;\n            this.groundTexture.wrapT = THREE.RepeatWrapping;\n            this.groundTexture.repeat.set(texRepeat, texRepeat);\n\n            // ground material diffuse map is the regular ground texture and the grid texture\n            // is used in the emissive map. This way, the grid is always equally visible, even at night.\n            this.groundMaterialProps = {\n                map: this.groundTexture,\n                emissive: new THREE.Color(0xFFFFFF),\n                emissiveMap: this.gridTexture\n            };\n\n            // use .shading for A-Frame < 0.7.0 and .flatShading for A-Frame >= 0.7.0\n            if (new THREE.Material().hasOwnProperty('shading')) {\n                this.groundMaterialProps.shading = this.data.flatShading ? THREE.FlatShading : THREE.SmoothShading;\n            } else {\n                this.groundMaterialProps.flatShading = this.data.flatShading;\n            }\n\n            this.groundMaterial = new THREE.MeshLambertMaterial(this.groundMaterialProps);\n        }\n\n        var groundctx = this.groundCanvas.getContext('2d');\n        var gridctx = this.gridCanvas.getContext('2d');\n\n        this.drawTexture(groundctx, groundResolution, texMeters);\n\n        gridctx.fillStyle = '#000000';\n        gridctx.fillRect(0, 0, groundResolution, groundResolution);\n        this.drawGrid(gridctx, groundResolution, texMeters);\n\n        this.groundTexture.needsUpdate = true;\n        this.gridTexture.needsUpdate = true;\n\n        if (updateGeometry) {\n            var mesh = new THREE.Mesh(this.groundGeometry, this.groundMaterial);\n            this.ground.setObject3D('mesh', mesh);\n        } else {\n            this.ground.getObject3D('mesh').material = this.groundMaterial;\n        }\n\n        this.ground.setAttribute('shadow', {\n            cast: false,\n            receive: this.data.shadow\n        });\n    },\n\n    // draw grid to a canvas context\n    drawGrid: function (ctx, size, texMeters) {\n\n        if (this.data.grid == 'none') return;\n\n        // one grid feature each 2 meters\n\n        var num = Math.floor(texMeters / 2);\n        var step = size / (texMeters / 2); // 2 meters == <step> pixels\n        var i, j, ii;\n\n        ctx.fillStyle = this.data.gridColor;\n\n        switch (this.data.grid) {\n            case '1x1':\n            case '2x2':\n                {\n                    if (this.data.grid == '1x1') {\n                        num = num * 2;\n                        step = size / texMeters;\n                    }\n                    for (i = 0; i < num; i++) {\n                        ii = Math.floor(i * step);\n                        ctx.fillRect(0, ii, size, 1);\n                        ctx.fillRect(ii, 0, 1, size);\n                    }\n                    break;\n                }\n            case 'crosses':\n                {\n                    var l = Math.floor(step / 20);\n                    for (i = 0; i < num + 1; i++) {\n                        ii = Math.floor(i * step);\n                        for (j = 0; j < num + 1; j++) {\n                            var jj = Math.floor(-l + j * step);\n                            ctx.fillRect(jj, ii, l * 2, 1);\n                            ctx.fillRect(ii, jj, 1, l * 2);\n                        }\n                    }\n                    break;\n                }\n            case 'dots':\n                {\n                    for (i = 0; i < num + 1; i++) {\n                        for (j = 0; j < num + 1; j++) {\n                            ctx.beginPath();\n                            ctx.arc(Math.floor(j * step), Math.floor(i * step), 4, 0, Math.PI * 2);\n                            ctx.fill();\n                        }\n                    }\n                    break;\n                }\n            case 'xlines':\n                {\n                    for (i = 0; i < num; i++) {\n                        ctx.fillRect(Math.floor(i * step), 0, 1, size);\n                    }\n                    break;\n                }\n            case 'ylines':\n                {\n                    for (i = 0; i < num; i++) {\n                        ctx.fillRect(0, Math.floor(i * step), size, 1);\n                    }\n                    break;\n                }\n        }\n    },\n\n    // draw ground texture to a canvas context\n    drawTexture: function (ctx, size, texMeters) {\n        // fill all with ground Color\n        ctx.fillStyle = this.data.groundColor;\n        ctx.fillRect(0, 0, size, size);\n\n        var i, col, col1, col2, im, imdata, numpixels;\n\n        if (this.data.groundTexture == 'none') return;\n        switch (this.data.groundTexture) {\n            case 'checkerboard':\n                {\n                    ctx.fillStyle = this.data.groundColor2;\n                    var num = Math.floor(texMeters / 2);\n                    var step = size / (texMeters / 2); // 2 meters == <step> pixels\n                    for (i = 0; i < num + 1; i += 2) {\n                        for (var j = 0; j < num + 1; j++) {\n                            ctx.fillRect(Math.floor((i + j % 2) * step), Math.floor(j * step), Math.floor(step), Math.floor(step));\n                        }\n                    }\n                    break;\n                }\n            case 'squares':\n                {\n                    var numSquares = 16;\n                    var squareSize = size / numSquares;\n                    col1 = new THREE.Color(this.data.groundColor);\n                    col2 = new THREE.Color(this.data.groundColor2);\n                    for (i = 0; i < numSquares * numSquares; i++) {\n                        col = this.random(i + 3) > 0.5 ? col1.clone() : col2.clone();\n                        col.addScalar(this.random(i + 3) * 0.1 - 0.05);\n                        ctx.fillStyle = '#' + col.getHexString();\n                        ctx.fillRect((i % numSquares) * squareSize, Math.floor(i / numSquares) * squareSize, squareSize, squareSize);\n                    }\n                    break;\n                }\n            case 'noise':\n                {\n                    // TODO: fix\n                    imdata = ctx.getImageData(0, 0, size, size);\n                    im = imdata.data;\n                    col1 = new THREE.Color(this.data.groundColor);\n                    col2 = new THREE.Color(this.data.groundColor2);\n                    var diff = new THREE.Color(col2.r - col1.r, col2.g - col1.g, col2.b - col1.b);\n                    var perlin = new PerlinNoise();\n                    for (i = 0, j = 0, numpixels = im.length; i < numpixels; i += 4, j++) {\n                        //console.log( (j % size) / size, j / size)\n                        var rnd = perlin.noise((j % size) / size * 3, j / size / size * 3, 0);\n                        im[i + 0] = Math.floor((col1.r + diff.r * rnd) * 255);\n                        im[i + 1] = Math.floor((col1.g + diff.g * rnd) * 255);\n                        im[i + 2] = Math.floor((col1.b + diff.b * rnd) * 255);\n                    }\n                    ctx.putImageData(imdata, 0, 0);\n                    break;\n                }\n            case 'walkernoise':\n                {\n                    var s = Math.floor(size / 2);\n                    var tex = document.createElement('canvas');\n                    tex.width = s;\n                    tex.height = s;\n                    var texctx = tex.getContext('2d');\n                    texctx.fillStyle = this.data.groundColor;\n                    texctx.fillRect(0, 0, s, s);\n                    imdata = texctx.getImageData(0, 0, s, s);\n                    im = imdata.data;\n                    col1 = new THREE.Color(this.data.groundColor);\n                    col2 = new THREE.Color(this.data.groundColor2);\n                    var walkers = [];\n                    var numwalkers = 1000;\n                    for (i = 0; i < numwalkers; i++) {\n                        col = col1.clone().lerp(col2, Math.random());\n                        walkers.push({\n                            x: Math.random() * s,\n                            y: Math.random() * s,\n                            r: Math.floor(col.r * 255),\n                            g: Math.floor(col.g * 255),\n                            b: Math.floor(col.b * 255)\n                        });\n                    }\n                    var iterations = 5000;\n                    for (var it = 0; it < iterations; it++) {\n                        for (i = 0; i < numwalkers; i++) {\n                            var walker = walkers[i];\n                            var pos = Math.floor((walker.y * s + walker.x)) * 4;\n                            im[pos + 0] = walker.r;\n                            im[pos + 1] = walker.g;\n                            im[pos + 2] = walker.b;\n                            walker.x += Math.floor(Math.random() * 3) - 1;\n                            walker.y += Math.floor(Math.random() * 3) - 1;\n                            if (walker.x >= s) walker.x = walker.x - s;\n                            if (walker.y >= s) walker.y = walker.y - s;\n                            if (walker.x < 0) walker.x = s + walker.x;\n                            if (walker.y < 0) walker.y = s + walker.y;\n                        }\n                    }\n                    texctx.putImageData(imdata, 0, 0);\n                    ctx.drawImage(tex, 0, 0, size, size);\n                    break;\n                }\n        }\n    },\n\n    // returns an array of THREE.Geometry for set dressing\n    getAssetGeometry: function (data) {\n        if (!data) return null;\n        var geoset = [];\n        var self = this;\n\n        function applyNoise(geo, noise) {\n            var n = new THREE.Vector3();\n            for (var i = 0, numVerts = geo.vertices.length; i < numVerts; i++) {\n                n.x = (self.random(i) - 0.5) * noise;\n                n.y = (self.random(i + numVerts) - 0.5) * noise;\n                n.z = (self.random(i + numVerts * 2) - 0.5) * noise;\n                geo.vertices[i].add(n);\n            }\n        }\n\n        var i, geo, verts;\n\n        for (var j = 0; j < data.length; j++) {\n\n            if (data[j].type == 'lathe') {\n                var maxy = -99999;\n                var points = [];\n                verts = data[j].vertices;\n                for (i = 0; i < verts.length; i += 2) {\n                    points.push(new THREE.Vector2(verts[i], verts[i + 1]));\n                    if (verts[i + 1] > maxy) {\n                        maxy = verts[i + 1];\n                    }\n                }\n                geo = new THREE.LatheGeometry(points, data[j]['segments'] || 8);\n                geo.applyMatrix(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(-Math.PI, 0, 0)));\n                geo.applyMatrix(new THREE.Matrix4().makeTranslation(0, maxy, 0));\n                if (data[j]['noise']) applyNoise(geo, data[j].noise);\n                geoset.push(geo);\n            } else if (data[j].type == 'extrude') {\n                var shape = new THREE.Shape();\n                verts = data[j].vertices;\n                for (i = 0; i < verts.length; i += 2) {\n                    if (i == 0) shape.moveTo(verts[i], verts[i + 1]);\n                    else shape.lineTo(verts[i], verts[i + 1]);\n                }\n                geo = new THREE.ExtrudeGeometry(shape, {\n                    amount: 1,\n                    bevelEnabled: false\n                });\n                geo.applyMatrix(new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(-Math.PI / 2, 0, 0)));\n                if (data[j]['noise']) applyNoise(geo, data[j].noise);\n                geoset.push(geo);\n            } else if (data[j].type == 'mesh') {\n                geo = new THREE.Geometry();\n                verts = data[j].vertices;\n                var faces = data[j].faces;\n                for (var v = 0; v < verts.length; v += 3) {\n                    geo.vertices.push(new THREE.Vector3(verts[v], verts[v + 1], verts[v + 2]));\n                }\n                for (var f = 0; f < faces.length; f += 3) {\n                    geo.faces.push(new THREE.Face3(faces[f], faces[f + 1], faces[f + 2]));\n                }\n                if (this.data.flatShading || data[j]['flatShading']) {\n                    geo.computeFaceNormals();\n                } else {\n                    geo.computeVertexNormals();\n                }\n\n                if (data[j]['mirror']) {\n                    geo.merge(geo, new THREE.Matrix4().makeRotationFromEuler(new THREE.Euler(0, Math.PI, 0)));\n                }\n\n                if (data[j]['noise']) applyNoise(geo, data[j].noise);\n                geoset.push(geo);\n            }\n        }\n        return geoset;\n    },\n\n    // updates set dressing\n    updateDressing: function () {\n        var dressing = new THREE.Object3D();\n        this.dressing.setAttribute('visible', this.data.dressing != 'none');\n        if (this.data.dressing == 'none') {\n            return;\n        }\n        var geometry = new THREE.Geometry(); // mother geometry that will hold all instances\n\n        // get array of geometries\n        var geoset;\n        switch (this.data.dressing) {\n            case 'cubes':\n                {\n                    geoset = [new THREE.BoxGeometry(1, 1, 1)];\n                    geoset[0].applyMatrix(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n                    break;\n                }\n            case 'pyramids':\n                {\n                    geoset = [new THREE.ConeGeometry(1, 1, 4, 1, true)];\n                    geoset[0].applyMatrix(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n                    break;\n                }\n            case 'cylinders':\n                {\n                    geoset = [new THREE.CylinderGeometry(0.5, 0.5, 1, 8, 1, true)];\n                    geoset[0].applyMatrix(new THREE.Matrix4().makeTranslation(0, 0.5, 0));\n                    break;\n                }\n            default:\n                {\n                    geoset = this.getAssetGeometry(this.assets[this.data.dressing]);\n                    if (!geoset) return;\n                    break;\n                }\n        }\n\n        for (var i = 0, r = 88343; i < this.data.dressingAmount; i++, r++) {\n\n            var geo = geoset[Math.floor(this.random(33 + i) * geoset.length)];\n            /*\n                  // change vertex colors\n                  var color = new THREE.Color(0xFFFFFF).multiplyScalar(1 - this.random(66 + i) * 0.3);\n\n                  for (var f = 0, fl = geo.faces.length; f < fl; f++) {\n                    var face = geo.faces[f];\n                    for (var v = 0; v < 3; v++) {\n                      p = geo.vertices[face[faceindex[v]]]; // get vertex position\n                      var floorao =  p.y / 4 + 0.75;\n                      face.vertexColors[v] = new THREE.Color(color.r * floorao, color.g * floorao, color.b * floorao);\n                    }\n                  }\n            */\n            // set random position, rotation and scale\n            var ds = this.data.dressingScale;\n            var dv = new THREE.Vector3(this.data.dressingVariance.x, this.data.dressingVariance.y, this.data.dressingVariance.z);\n            var distance;\n            var onPlayArea = this.random(r) < this.data.dressingOnPlayArea;\n            if (onPlayArea) {\n                distance = this.random(r + 1) * 15;\n            } else {\n                distance = 10 + Math.max(dv.x, dv.z) + 10 * this.random(r + 1) + this.random(r + 2) * this.STAGE_SIZE / 3;\n            }\n\n            var direction = this.random(r + 3) * Math.PI * 2;\n            var matrix = new THREE.Matrix4();\n            var scale = this.random(r + 4);\n            var uniformScale = this.data.dressingUniformScale;\n\n            matrix.compose(\n                // position\n                new THREE.Vector3(\n                    Math.cos(direction) * distance,\n                    0,\n                    Math.sin(direction) * distance\n                ),\n                // rotation\n                new THREE.Quaternion().setFromAxisAngle(\n                    new THREE.Vector3(0, 1, 0),\n                    (this.random(r + 5) - 0.5) * dv.length() * Math.PI * 2\n                ),\n                // scale\n                new THREE.Vector3(\n                    ds + (uniformScale ? scale : this.random(r + 6)) * dv.x,\n                    ds + (uniformScale ? scale : this.random(r + 7)) * dv.y,\n                    ds + (uniformScale ? scale : this.random(r + 8)) * dv.z\n                )\n            );\n\n            // merge with mother geometry\n            geometry.merge(geo, matrix);\n        }\n\n        // convert geometry to buffergeometry\n        var bufgeo = new THREE.BufferGeometry();\n        bufgeo.fromGeometry(geometry);\n\n        // setup material\n        var material = new THREE.MeshLambertMaterial({\n            color: new THREE.Color(this.data.dressingColor),\n            vertexColors: THREE.VertexColors\n        });\n\n        if (this.data.flatShading) {\n            bufgeo.computeVertexNormals();\n        }\n\n        // create mesh\n        var mesh = new THREE.Mesh(bufgeo, material);\n        dressing.add(mesh);\n        // add to scene\n        this.dressing.setObject3D('mesh', dressing);\n    },\n\n    // initializes the BufferGeometry for the stars\n    createStars: function () {\n        var numStars = 2000;\n        var geometry = new THREE.BufferGeometry();\n        var positions = new Float32Array(numStars * 3);\n        var radius = this.STAGE_SIZE - 1;\n        var v = new THREE.Vector3();\n        for (var i = 0; i < positions.length; i += 3) {\n            v.set(this.random(i + 23) - 0.5, this.random(i + 24), this.random(i + 25) - 0.5);\n            v.normalize();\n            v.multiplyScalar(radius);\n            positions[i] = v.x;\n            positions[i + 1] = v.y;\n            positions[i + 2] = v.z;\n        }\n        geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n        geometry.setDrawRange(0, 0); // don't draw any yet\n        var material = new THREE.PointsMaterial({\n            size: 0.01,\n            color: 0xCCCCCC,\n            fog: false\n        });\n        this.stars.setObject3D('mesh', new THREE.Points(geometry, material));\n    },\n\n    // Sets the number of stars visible. Calls createStars() to initialize if needed.\n    setStars: function (numStars) {\n        if (!this.stars) {\n            this.stars = document.createElement('a-entity');\n            this.stars.id = 'stars';\n            this.createStars();\n            this.el.appendChild(this.stars);\n        }\n        numStars = Math.floor(Math.min(2000, Math.max(0, numStars)));\n        this.stars.getObject3D('mesh').geometry.setDrawRange(0, numStars);\n    }\n});\n\n// atmosphere sky shader. From https://github.com/aframevr/aframe/blob/master/examples/test/shaders/shaders/sky.js\nAFRAME.registerShader('skyshader', {\n    schema: {\n        luminance: {\n            type: 'number',\n            default: 1,\n            min: 0,\n            max: 2,\n            is: 'uniform'\n        },\n        turbidity: {\n            type: 'number',\n            default: 2,\n            min: 0,\n            max: 20,\n            is: 'uniform'\n        },\n        reileigh: {\n            type: 'number',\n            default: 1,\n            min: 0,\n            max: 4,\n            is: 'uniform'\n        },\n        mieCoefficient: {\n            type: 'number',\n            default: 0.005,\n            min: 0,\n            max: 0.1,\n            is: 'uniform'\n        },\n        mieDirectionalG: {\n            type: 'number',\n            default: 0.8,\n            min: 0,\n            max: 1,\n            is: 'uniform'\n        },\n        sunPosition: {\n            type: 'vec3',\n            default: {\n                x: 0,\n                y: 0,\n                z: -1\n            },\n            is: 'uniform'\n        },\n        color: {\n            type: 'color',\n            default: '#fff'\n        } //placeholder to remove warning\n    },\n\n    vertexShader: [\n    'varying vec3 vWorldPosition;',\n    'void main() {',\n    'vec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\n    'vWorldPosition = worldPosition.xyz;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n    '}'\n  ].join('\\n'),\n\n    fragmentShader: [\n    'uniform sampler2D skySampler;',\n    'uniform vec3 sunPosition;',\n    'varying vec3 vWorldPosition;',\n\n    'vec3 cameraPos = vec3(0., 0., 0.);',\n\n    'uniform float luminance;',\n    'uniform float turbidity;',\n    'uniform float reileigh;',\n    'uniform float mieCoefficient;',\n    'uniform float mieDirectionalG;',\n\n    // constants for atmospheric scattering'\n    'const float e = 2.71828182845904523536028747135266249775724709369995957;',\n    'const float pi = 3.141592653589793238462643383279502884197169;',\n\n    // refractive index of air\n    'const float n = 1.0003;',\n    // number of molecules per unit volume for air at'\n    'const float N = 2.545E25;',\n    // 288.15K and 1013mb (sea level -45 celsius)\n    // depolatization factor for standard air\n    'const float pn = 0.035;',\n    // wavelength of used primaries, according to preetham\n    'const vec3 lambda = vec3(680E-9, 550E-9, 450E-9);',\n\n    // mie stuff\n    // K coefficient for the primaries\n    'const vec3 K = vec3(0.686, 0.678, 0.666);',\n    'const float v = 4.0;',\n\n    // optical length at zenith for molecules\n    'const float rayleighZenithLength = 8.4E3;',\n    'const float mieZenithLength = 1.25E3;',\n    'const vec3 up = vec3(0.0, 1.0, 0.0);',\n\n    'const float EE = 1000.0;',\n    'const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;',\n    // 66 arc seconds -> degrees, and the cosine of that\n\n    // earth shadow hack'\n    'const float cutoffAngle = pi/1.95;',\n    'const float steepness = 1.5;',\n\n    'vec3 totalRayleigh(vec3 lambda)',\n    '{',\n    'return (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn));',\n    '}',\n\n    // see http://blenderartists.org/forum/showthread.php?321110-Shaders-and-Skybox-madness\n    // A simplied version of the total Rayleigh scattering to works on browsers that use ANGLE\n    'vec3 simplifiedRayleigh()',\n    '{',\n    'return 0.0005 / vec3(94, 40, 18);',\n    '}',\n\n    'float rayleighPhase(float cosTheta)',\n    '{   ',\n    'return (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));',\n    '}',\n\n    'vec3 totalMie(vec3 lambda, vec3 K, float T)',\n    '{',\n    'float c = (0.2 * T ) * 10E-18;',\n    'return 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;',\n    '}',\n\n    'float hgPhase(float cosTheta, float g)',\n    '{',\n    'return (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));',\n    '}',\n\n    'float sunIntensity(float zenithAngleCos)',\n    '{',\n    'return EE * max(0.0, 1.0 - exp(-((cutoffAngle - acos(zenithAngleCos))/steepness)));',\n    '}',\n\n    '// Filmic ToneMapping http://filmicgames.com/archives/75',\n    'float A = 0.15;',\n    'float B = 0.50;',\n    'float C = 0.10;',\n    'float D = 0.20;',\n    'float E = 0.02;',\n    'float F = 0.30;',\n    'float W = 1000.0;',\n\n    'vec3 Uncharted2Tonemap(vec3 x)',\n    '{',\n    'return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;',\n    '}',\n\n    'void main() ',\n    '{',\n    'float sunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);',\n\n    'float reileighCoefficient = reileigh - (1.0* (1.0-sunfade));',\n\n    'vec3 sunDirection = normalize(sunPosition);',\n\n    'float sunE = sunIntensity(dot(sunDirection, up));',\n\n    // extinction (absorbtion + out scattering)\n    // rayleigh coefficients\n\n    'vec3 betaR = simplifiedRayleigh() * reileighCoefficient;',\n\n    // mie coefficients\n    'vec3 betaM = totalMie(lambda, K, turbidity) * mieCoefficient;',\n\n    // optical length\n    // cutoff angle at 90 to avoid singularity in next formula.\n    'float zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));',\n    'float sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));',\n    'float sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));',\n\n    // combined extinction factor\n    'vec3 Fex = exp(-(betaR * sR + betaM * sM));',\n\n    // in scattering\n    'float cosTheta = dot(normalize(vWorldPosition - cameraPos), sunDirection);',\n\n    'float rPhase = rayleighPhase(cosTheta*0.5+0.5);',\n    'vec3 betaRTheta = betaR * rPhase;',\n\n    'float mPhase = hgPhase(cosTheta, mieDirectionalG);',\n    'vec3 betaMTheta = betaM * mPhase;',\n\n    'vec3 Lin = pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * (1.0 - Fex),vec3(1.5));',\n    'Lin *= mix(vec3(1.0),pow(sunE * ((betaRTheta + betaMTheta) / (betaR + betaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, sunDirection),5.0),0.0,1.0));',\n\n    //nightsky\n    'vec3 direction = normalize(vWorldPosition - cameraPos);',\n    'float theta = acos(direction.y); // elevation --> y-axis, [-pi/2, pi/2]',\n    'float phi = atan(direction.z, direction.x); // azimuth --> x-axis [-pi/2, pi/2]',\n    'vec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);',\n    // vec3 L0 = texture2D(skySampler, uv).rgb+0.1 * Fex;\n    'vec3 L0 = vec3(0.1) * Fex;',\n\n    // composition + solar disc\n    'float sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);',\n    'L0 += (sunE * 19000.0 * Fex)*sundisk;',\n\n    'vec3 whiteScale = 1.0/Uncharted2Tonemap(vec3(W));',\n\n    'vec3 texColor = (Lin+L0);   ',\n    'texColor *= 0.04 ;',\n    'texColor += vec3(0.0,0.001,0.0025)*0.3;',\n\n    'float g_fMaxLuminance = 1.0;',\n    'float fLumScaled = 0.1 / luminance;     ',\n    'float fLumCompressed = (fLumScaled * (1.0 + (fLumScaled / (g_fMaxLuminance * g_fMaxLuminance)))) / (1.0 + fLumScaled); ',\n\n    'float ExposureBias = fLumCompressed;',\n\n    'vec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);',\n    'vec3 color = curr*whiteScale;',\n\n    'vec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*sunfade))));',\n\n    'gl_FragColor.rgb = retColor;',\n\n    'gl_FragColor.a = 1.0;',\n    '}'\n  ].join('\\n')\n});\n\n\n// gradient sky shader\n\nAFRAME.registerShader('gradientshader', {\n    schema: {\n        topColor: {\n            type: 'color',\n            default: '1 0 0',\n            is: 'uniform'\n        },\n        bottomColor: {\n            type: 'color',\n            default: '0 0 1',\n            is: 'uniform'\n        }\n    },\n\n    vertexShader: [\n    'varying vec3 vWorldPosition;',\n    'void main() {',\n    ' vec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\n    ' vWorldPosition = worldPosition.xyz;',\n    ' gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );',\n    '}'\n  ].join('\\n'),\n\n    fragmentShader: [\n    'uniform vec3 bottomColor;',\n    'uniform vec3 topColor;',\n    'uniform float offset;',\n    'varying vec3 vWorldPosition;',\n    'void main() {',\n    ' float h = normalize( vWorldPosition ).y;',\n    ' gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max(h, 0.0 ), 0.8 ), 0.0 ) ), 1.0 );',\n    '}'\n  ].join('\\n')\n});\n\n// perlin noise generator\n// from https://gist.github.com/banksean/304522\n\nvar PerlinNoise = function (r) {\n    if (r == undefined) r = Math;\n    this.grad3 = [[1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0], [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1], [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]];\n    this.p = [];\n    var i;\n    for (i = 0; i < 256; i++) {\n        this.p[i] = Math.floor(r.random(666) * 256);\n    }\n    // To remove the need for index wrapping, double the permutation table length\n    this.perm = [];\n    for (i = 0; i < 512; i++) {\n        this.perm[i] = this.p[i & 255];\n    }\n};\n\nPerlinNoise.prototype.dot = function (g, x, y, z) {\n    return g[0] * x + g[1] * y + g[2] * z;\n};\n\nPerlinNoise.prototype.mix = function (a, b, t) {\n    return (1.0 - t) * a + t * b;\n};\n\nPerlinNoise.prototype.fade = function (t) {\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n};\n\n// Classic Perlin noise, 3D version\nPerlinNoise.prototype.noise = function (x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x);\n    var Y = Math.floor(y);\n    var Z = Math.floor(z);\n\n    // Get relative xyz coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    z = z - Z;\n\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n    Z = Z & 255;\n\n    // Calculate a set of eight hashed gradient indices\n    var gi000 = this.perm[X + this.perm[Y + this.perm[Z]]] % 12;\n    var gi001 = this.perm[X + this.perm[Y + this.perm[Z + 1]]] % 12;\n    var gi010 = this.perm[X + this.perm[Y + 1 + this.perm[Z]]] % 12;\n    var gi011 = this.perm[X + this.perm[Y + 1 + this.perm[Z + 1]]] % 12;\n    var gi100 = this.perm[X + 1 + this.perm[Y + this.perm[Z]]] % 12;\n    var gi101 = this.perm[X + 1 + this.perm[Y + this.perm[Z + 1]]] % 12;\n    var gi110 = this.perm[X + 1 + this.perm[Y + 1 + this.perm[Z]]] % 12;\n    var gi111 = this.perm[X + 1 + this.perm[Y + 1 + this.perm[Z + 1]]] % 12;\n\n    // The gradients of each corner are now:\n    // g000 = grad3[gi000];\n    // g001 = grad3[gi001];\n    // g010 = grad3[gi010];\n    // g011 = grad3[gi011];\n    // g100 = grad3[gi100];\n    // g101 = grad3[gi101];\n    // g110 = grad3[gi110];\n    // g111 = grad3[gi111];\n    // Calculate noise contributions from each of the eight corners\n    var n000 = this.dot(this.grad3[gi000], x, y, z);\n    var n100 = this.dot(this.grad3[gi100], x - 1, y, z);\n    var n010 = this.dot(this.grad3[gi010], x, y - 1, z);\n    var n110 = this.dot(this.grad3[gi110], x - 1, y - 1, z);\n    var n001 = this.dot(this.grad3[gi001], x, y, z - 1);\n    var n101 = this.dot(this.grad3[gi101], x - 1, y, z - 1);\n    var n011 = this.dot(this.grad3[gi011], x, y - 1, z - 1);\n    var n111 = this.dot(this.grad3[gi111], x - 1, y - 1, z - 1);\n    // Compute the fade curve value for each of x, y, z\n    var u = this.fade(x);\n    var v = this.fade(y);\n    var w = this.fade(z);\n    // Interpolate along x the contributions from each of the corners\n    var nx00 = this.mix(n000, n100, u);\n    var nx01 = this.mix(n001, n101, u);\n    var nx10 = this.mix(n010, n110, u);\n    var nx11 = this.mix(n011, n111, u);\n    // Interpolate the four results along y\n    var nxy0 = this.mix(nx00, nx10, v);\n    var nxy1 = this.mix(nx01, nx11, v);\n    // Interpolate the two last results along z\n    var nxyz = this.mix(nxy0, nxy1, w);\n\n    return nxyz;\n};\n"]}